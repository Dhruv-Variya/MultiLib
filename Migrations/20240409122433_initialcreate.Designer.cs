// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _NET.Data;

#nullable disable

namespace _NET.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240409122433_initialcreate")]
    partial class initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_NET.models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("_NET.models.analysis", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("downVote")
                        .HasColumnType("int");

                    b.Property<string>("itemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("itemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("timesClicked")
                        .HasColumnType("int");

                    b.Property<int?>("trailerReach")
                        .HasColumnType("int");

                    b.Property<int?>("upVote")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("analysis");
                });

            modelBuilder.Entity("_NET.models.catagoryModel", b =>
                {
                    b.Property<int>("catagoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("catagoryId"));

                    b.Property<string>("CatagoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("catagoryId");

                    b.ToTable("Catagory");
                });

            modelBuilder.Entity("_NET.models.itemCatagories", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("catagoryId")
                        .HasColumnType("int");

                    b.Property<string>("itemCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("itemCatagories");
                });

            modelBuilder.Entity("_NET.models.itemLanguages", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("itemCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("languageId")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("itemLanguages");
                });

            modelBuilder.Entity("_NET.models.languageModel", b =>
                {
                    b.Property<int>("languageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("languageId"));

                    b.Property<string>("languageName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("languageId");

                    b.ToTable("languages");
                });

            modelBuilder.Entity("_NET.models.post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("movie_name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movie_url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("posts");
                });

            modelBuilder.Entity("models.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lang")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("MoviePoster")
                        .HasColumnType("varbinary(max)");

                    b.Property<float?>("Rating")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreailerURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("movies");
                });

            modelBuilder.Entity("models.animeModel", b =>
                {
                    b.Property<int>("animeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("animeId"));

                    b.Property<string>("animeBackPoster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeCast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeCatagory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeLanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animePoster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeSeasons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("animeTrailerURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("isUpcoming")
                        .HasColumnType("bit");

                    b.HasKey("animeId");

                    b.ToTable("animeStorage");
                });

            modelBuilder.Entity("models.movieModel", b =>
                {
                    b.Property<int>("movieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("movieId"));

                    b.Property<bool?>("isUpcoming")
                        .HasColumnType("bit");

                    b.Property<string>("movieBackPoster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movieCast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movieCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movieDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("moviePoster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movieRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movieReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movieTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("movieTrailerURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("movieId");

                    b.ToTable("movieStorage");
                });

            modelBuilder.Entity("models.tvShowModel", b =>
                {
                    b.Property<int>("tvShowId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("tvShowId"));

                    b.Property<bool?>("isUpcoming")
                        .HasColumnType("bit");

                    b.Property<string>("tvShowBackPoster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowCast")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowCatagory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowLanguages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowPoster")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowRating")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowReleaseDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowSeasons")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tvShowTrailerURL")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tvShowId");

                    b.ToTable("tvShowStorage");
                });
#pragma warning restore 612, 618
        }
    }
}
